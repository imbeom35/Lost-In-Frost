plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'io.ssafy'
version = '1.0'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2022.0.4")
}

dependencies {
	implementation 'net.minidev:json-smart:2.4.10'

	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

	// oauth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// amqp
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'

	// jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.session:spring-session-data-redis'

	// mail
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// config
	implementation 'org.springframework.cloud:spring-cloud-starter-config'

	// eureka
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	// feign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// kafka
	implementation 'org.springframework.kafka:spring-kafka'

	// bootstrap
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'

	// prometheus
	implementation 'io.micrometer:micrometer-registry-prometheus'

	// security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// swagger
	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.2.0'

	// hibernate validator
	implementation group: 'org.hibernate', name: 'hibernate-validator', version: '8.0.1.Final'

	// lombok
	compileOnly 'org.projectlombok:lombok'

	// devtools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// mysql
	runtimeOnly 'com.mysql:mysql-connector-j'

	// lombok
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}
