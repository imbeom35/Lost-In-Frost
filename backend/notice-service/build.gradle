plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'io.ssafy'
version = '1.0'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // amqp
    implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp:4.0.1'

    // actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator:'

    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.session:spring-session-data-redis'

    // config
    implementation 'org.springframework.cloud:spring-cloud-starter-config:4.0.3'

    // eureka
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:4.0.2'

    // feign
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.0.3'

    // kafka
    implementation 'org.springframework.kafka:spring-kafka'

    // bootstrap
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:4.0.3'

    // querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // swagger
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.2.0'

    // hibernate validator
    implementation group: 'org.hibernate', name: 'hibernate-validator', version: '8.0.1.Final'

    // devtools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // mysql
    runtimeOnly 'com.mysql:mysql-connector-j'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // prometheus
    implementation 'io.micrometer:micrometer-registry-prometheus'

}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}
